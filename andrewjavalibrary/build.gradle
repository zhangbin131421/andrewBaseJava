apply plugin: 'com.android.library'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    //as 4.0以下
    dataBinding {
        enabled = true
    }
}

dependencies {
//    val lifecycle_version = "2.3.1"
//    val arch_version = "2.1.0"
//    ext.lifecycle_version = "2.3.1"
//    ext.arch_version = "2.1.0"
    // ViewModel
    implementation("androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version")
    // LiveData
    implementation("androidx.lifecycle:lifecycle-livedata:$lifecycle_version")
    // Lifecycles only (without ViewModel or LiveData)
//    implementation("androidx.lifecycle:lifecycle-runtime:$lifecycle_version")

    // Saved state module for ViewModel
//    implementation("androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version")

    // Annotation processor
//    annotationProcessor("androidx.lifecycle:lifecycle-compiler:$lifecycle_version")
    // alternately - if using Java8, use the following instead of lifecycle-compiler
//    implementation("androidx.lifecycle:lifecycle-common-java8:$lifecycle_version")

    // optional - helpers for implementing LifecycleOwner in a Service
//    implementation("androidx.lifecycle:lifecycle-service:$lifecycle_version")

    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
//    implementation("androidx.lifecycle:lifecycle-process:$lifecycle_version")

    // optional - ReactiveStreams support for LiveData
//    implementation("androidx.lifecycle:lifecycle-reactivestreams:$lifecycle_version")

    // optional - Test helpers for LiveData
//    testImplementation("androidx.arch.core:core-testing:$arch_version")

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.3.0'

    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version")

    api 'androidx.recyclerview:recyclerview:1.2.1'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'


    //    MultiDex.install(this);
    implementation 'com.android.support:multidex:1.0.3'
    //logger
    api 'com.orhanobut:logger:2.2.0'

    //retrofit2
    api 'com.squareup.retrofit2:retrofit:2.9.0'
    api 'com.squareup.retrofit2:converter-gson:2.9.0'
    //implementation 'com.google.code.gson:gson:2.8.6'
    api 'com.squareup.okhttp3:logging-interceptor:4.9.1'
    api("com.squareup.okhttp3:okhttp:4.9.1")

    //glide
    api 'com.github.bumptech.glide:glide:4.12.0'
    api "com.github.bumptech.glide:okhttp3-integration:4.11.0"
    api 'com.github.bumptech.glide:annotations:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'

    //mmkv
    implementation 'com.tencent:mmkv-static:1.1.0'
}
